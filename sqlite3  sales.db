Microsoft Windows [Version 10.0.26100.3775]
(c) Microsoft Corporation. All rights reserved.

C:\Users\adity>sqlite3 sales.db
SQLite version 3.49.1 2025-02-18 13:38:58
Enter ".help" for usage hints.
sqlite> CREATE TABLE vehicle_sales (
(x1...>     Vehicle_ID TEXT,
(x1...>     Vehicle_Model TEXT,
(x1...>     Vehicle_Type TEXT,
(x1...>     Region TEXT,
(x1...>     Sales_Date TEXT,
(x1...>     Sales_Quantity INTEGER,
(x1...>     Price_per_Vehicle INTEGER,
(x1...>     Revenue INTEGER,
(x1...>     Production_Start_Date TEXT,
(x1...>     Production_End_Date TEXT,
(x1...>     Production_Quantity INTEGER,
(x1...>     Inventory_Levels INTEGER,
(x1...>     Supplier TEXT,
(x1...>     Cost_per_Vehicle INTEGER,
(x1...>     Market_Share_Percent INTEGER,
(x1...>     Profit_Margin_Percent INTEGER,
(x1...>     Customer_Satisfaction_Rating REAL
(x1...> );
sqlite>
sqlite> .mode csv
sqlite> .headers on
sqlite> .import'C:\Users\adity\Downloads\vehicle_sales_data.csv'vehicle_sales
Error: unknown command or invalid arguments:  "import'C:\Users\adity\Downloads\vehicle_sales_data.csv'vehicle_sales". Enter ".help" for help
sqlite> .import "C:/Users/adity/Downloads/vehicle_sales_data.csv" vehicle_sales
sqlite> SELECT * FROM vehicle_sales LIMIT 5;
Vehicle_ID,Vehicle_Model,Vehicle_Type,Region,Sales_Date,Sales_Quantity,Price_per_Vehicle,Revenue,Production_Start_Date,Production_End_Date,Production_Quantity,Inventory_Levels,Supplier,Cost_per_Vehicle,Market_Share_Percent,Profit_Margin_Percent,Customer_Satisfaction_Rating
"Vehicle ID","Vehicle Model","Vehicle Type",Region,"Sales Date","Sales Quantity","Price per Vehicle",Revenue,"Production Start Date","Production End Date","Production Quantity","Inventory Levels",Supplier,"Cost per Vehicle","Market Share (%)","Profit Margin (%)","Customer Satisfaction Rating"
V001,"Tata Nexon EV","Electric SUV","North India",2023-10-17,164,1461826,239739464,2023-01-23,2023-09-17,468,304,"Supplier E",877095,7,18,4.1
V002,"Tata Tiago",Hatchback,"North India",2025-01-24,206,686621,141443926,2023-12-27,2024-11-08,217,11,"Supplier C",411972,6,16,4.4
V003,"Tata Nano",Hatchback,"South India",2024-01-23,444,200521,89031324,2023-02-17,2023-12-08,476,32,"Supplier G",120312,25,15,4.1
V004,"Tata Nexon EV","Electric SUV","West India",2024-10-03,199,1422438,283065162,2023-06-27,2024-07-28,268,69,"Supplier D",853462,9,9,4.7
sqlite> SELECT Vehicle_Model, SUM(Revenue) AS Total_Revenue
   ...> FROM vehicle_sales
   ...> GROUP BY Vehicle_Model
   ...> ORDER BY Total_Revenue DESC
   ...> LIMIT 5;
Vehicle_Model,Total_Revenue
"Tata Safari",35797484757
"Tata Hexa",30120453865
"Tata Nexon EV",26513877289
"Tata Harrier",21195867592
"Tata Altroz",12178013075
sqlite>
sqlite> SELECT
   ...>     strftime('%Y', Sales_Date) AS year,
   ...>     strftime('%m', Sales_Date) AS month,
   ...>     SUM(Revenue) AS total_revenue,
   ...>     COUNT(*) AS total_orders
   ...> FROM vehicle_sales
   ...> WHERE Sales_Date BETWEEN '2023-01-01' AND '2025-12-31'
   ...> GROUP BY year, month
   ...> ORDER BY year, month;
year,month,total_revenue,total_orders
2023,09,790089760,8
2023,10,3082423531,15
2023,11,3492242595,19
2023,12,7616759240,32
2024,01,9061510446,44
2024,02,8605431474,50
2024,03,11435179349,56
2024,04,19016701841,78
2024,05,17755072337,74
2024,06,12581014205,67
2024,07,12526881226,61
2024,08,12790832267,67
2024,09,15954061467,61
2024,10,11271991907,51
2024,11,10502444592,42
2024,12,7040592265,29
2025,01,3308743662,17
2025,02,3211928299,16
2025,03,1585201550,10
2025,04,1031175039,3
sqlite> CREATE TABLE monthly_sales_summary (
(x1...>     year TEXT,
(x1...>     month TEXT,
(x1...>     total_revenue INTEGER,
(x1...>     total_orders INTEGER
(x1...> );
sqlite> INSERT INTO monthly_sales_summary (year, month, total_revenue, total_orders)
   ...> SELECT
   ...>     strftime('%Y', Sales_Date) AS year,
   ...>     strftime('%m', Sales_Date) AS month,
   ...>     SUM(Revenue) AS total_revenue,
   ...>     COUNT(*) AS total_orders
   ...> FROM vehicle_sales
   ...> WHERE Sales_Date BETWEEN '2023-01-01' AND '2025-12-31'
   ...> GROUP BY year, month
   ...> ORDER BY year, month;
sqlite> SELECT * FROM monthly_sales_summary;
year,month,total_revenue,total_orders
2023,09,790089760,8
2023,10,3082423531,15
2023,11,3492242595,19
2023,12,7616759240,32
2024,01,9061510446,44
2024,02,8605431474,50
2024,03,11435179349,56
2024,04,19016701841,78
2024,05,17755072337,74
2024,06,12581014205,67
2024,07,12526881226,61
2024,08,12790832267,67
2024,09,15954061467,61
2024,10,11271991907,51
2024,11,10502444592,42
2024,12,7040592265,29
2025,01,3308743662,17
2025,02,3211928299,16
2025,03,1585201550,10
2025,04,1031175039,3
sqlite>
